#! /usr/bin/env node

var exec = require('child_process').exec
var fs = require('fs')


function checkErr(err)
{
  if (err)
  {
    console.error('Exited with error code: ' + err.code)
    console.log(stderr)
  }
}


function runTest(desc, commandParams, dataFile, test)
{
  return exec(
  './store --data-file ' + dataFile + ' add item1 "Value of item1"',
    function(err, stdout, stderr)
    {
      if (err)
      {
        console.errorg('Error while adding item1 to ' + dataFile)
      }
      return exec(
      './store --data-file ' + dataFile + ' add item2 "Value of item2"',
        function(err, stdout, stderr)
        {
          if (err)
          {
            console.errorg('Error while adding item2 to ' + dataFile)
          }

          return exec(
            './store --data-file ' + dataFile + ' ' + commandParams,
            function(err, stdout, stdin)
            {
              console.log()
              console.log(desc)
              return test(err, stdout, stderr, function()
                {
                  // clean up
                  if (fs.existsSync(dataFile))
                  {
                    fs.unlinkSync(dataFile)
                  }
                }
              )
            }
          )
        }
      )
    }
  )
}


runTest(
  'Testing help command...',
  'help',
  'test-data1.json',
  function(err, stdout, stderr, finished)
  {
    checkErr(err)
    if (stdout.indexOf('Usage: ') != -1)
    {
      console.log('Test passed.')
    }
    else
    {
      console.error('Test failed. Did not output text.')
    }
    return finished()
  }
)


runTest(
  'Testing listing items after adding...',
  'list',
  'test-data2.json',
  function(err, stdout, stderr, finished)
  {
    checkErr(err)
    //console.log(stdout)
    if (stdout.indexOf("item1: Value of item1") != -1)
    {
      console.log('Test passed. New item shows up in list output.')
    }
    else
    {
      console.error('Test failed. New item does not show up in list.')
    }
    return finished()
  }
)


runTest(
  'Testing getting item2 after adding...',
  'get item2',
  'test-data3.json',
  function(err, stdout, stderr, finished)
  {
    checkErr(err)
    if (stdout == 'Value of item2')
    {
      console.log('Test passed. Value of item2 was output.')
    }
    else
    {
      console.log('Test failed. Value of item2 was not output.')
    }
    return finished()
  }

)


runTest(
  'Testing getting item1 after adding...',
  'get item1',
  'test-data4.json',
  function(err, stdout, stderr, finished)
  {
    checkErr(err)
    if (stdout == 'Value of item1')
    {
      console.log('Test passed. Value of item1 was output.')
    }
    else
    {
      console.log('Test failed. Value of item1 was not output.')
    }
    return finished()
  }

)


runTest(
  'Testing removing item after adding...',
  'remove item1',
  'test-data-5.json',
  function(err, stdout, stderr, finished)
  {
    checkErr(err)
    return exec(
    './store --data-file test-data-5.json list',
      function(err, stdout, stderr)
      {
        checkErr(err)
        if (stdout.indexOf("item1: Value of item1") == -1)
        {
          console.log()
          console.log('Test passed. item1 properly removed and not in list output.')
        }
        else
        {
          console.log()
          console.error('Test failed. Removed item1 not properly removed and still in list output.')
        }
        return finished()
      }
    )
  }
)
